{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","toggleForm","showAdd","Task","task","deleteTask","toggleReminder","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","addTask","useState","setTask","date","setDate","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","form","setForm","length","previous","console","log","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecc29270.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor: color}} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelBlue',\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, toggleForm, showAdd}) => {\r\n    const handleToggle = () => {\r\n        toggleForm('click');\r\n    }\r\n    \r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={handleToggle}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n//CSS in JS\r\n// style={headingStyle} inside the element\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'purple',\r\n// }\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, deleteTask, toggleReminder}) => {\r\n    const handleDelete = () => {\r\n        deleteTask(task.id);\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        toggleReminder(task.id);\r\n    }\r\n    \r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={handleToggle}>\r\n            <h3>\r\n                {task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={handleDelete}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, deleteTask, toggleReminder}) => {\r\n    return (\r\n        <>\r\n            {tasks.map(task => (\r\n                <Task  key={task.id} task={task} deleteTask={deleteTask} toggleReminder={toggleReminder}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nTasks.propTypes = {\r\n    tasks: PropTypes.array,\r\n}\r\n\r\nexport default Tasks\r\n","import React, {useState} from 'react'\r\n\r\nconst AddTask = ({addTask}) => {\r\n    const [task, setTask] = useState();\r\n    const [date, setDate] = useState();\r\n    const [reminder, setReminder] = useState();\r\n\r\n    const handleAdd = (e) => {\r\n        e.preventDefault();\r\n        if(!task) {\r\n            alert('Please Add a Task');\r\n            return;\r\n        }\r\n        const newTask = {\r\n            text: task,\r\n            day: date,\r\n            reminder: reminder,\r\n        } \r\n\r\n        addTask(newTask);\r\n\r\n        setTask('');\r\n        setDate('');\r\n        setReminder(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={handleAdd}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={task} onChange={(e) => setTask(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Day & Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day & Time\" value={date} onChange={(e) => setDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label htmlFor=\"\">Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            \r\n            <input type=\"submit\" className=\"btn btn-block\" placeholder=\"Save Task\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React, { useState } from 'react' \nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const data = [\n    {\n        id: 1,\n        text: 'Doctors Appoinment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Doctors Appoinment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Doctors Appoinment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    }\n  ]\n\n  const [tasks, setTasks] = useState(data);\n  const [form, setForm] = useState(false);\n\n  const addTask = (task) => {\n    task.id = tasks.length + 1;\n    setTasks((previous) => [...previous, task]);\n  }\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task));\n    console.log('hello')\n  };\n\n  const toggleForm = () => {\n    setForm(!form);\n  }\n  \n  return (\n    <div className=\"container\">\n      <Header showAdd={form} toggleForm={toggleForm}/>\n      {form && <AddTask addTask={addTask}/>}\n\n      {tasks.length > 0 ? <Tasks tasks={tasks} toggleReminder={toggleReminder} deleteTask={deleteTask}/> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}