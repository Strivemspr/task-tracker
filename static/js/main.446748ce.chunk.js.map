{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","toggleForm","showAdd","location","useLocation","console","log","pathname","Task","task","deleteTask","toggleReminder","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","addTask","useState","setTask","date","setDate","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","setTasks","form","setForm","fetchTasks","a","fetch","res","json","data","fetchTask","useEffect","getTasks","length","method","headers","body","JSON","stringify","previous","filter","reminderToUpdate","updatedReminder","Home","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.446748ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor: color}} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelBlue',\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Header = ({ title, toggleForm, showAdd}) => {\r\n    const handleToggle = () => {\r\n        toggleForm('click');\r\n    }\r\n\r\n    let location = useLocation();\r\n    console.log(location)\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={handleToggle}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n//CSS in JS\r\n// style={headingStyle} inside the element\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'purple',\r\n// }\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, deleteTask, toggleReminder}) => {\r\n    const handleDelete = () => {\r\n        deleteTask(task.id);\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        toggleReminder(task.id);\r\n    }\r\n    \r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={handleToggle}>\r\n            <h3>\r\n                {task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={handleDelete}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, deleteTask, toggleReminder}) => {\r\n    return (\r\n        <>\r\n            {tasks.map(task => (\r\n                <Task  key={task.id} task={task} deleteTask={deleteTask} toggleReminder={toggleReminder}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nTasks.propTypes = {\r\n    tasks: PropTypes.array,\r\n}\r\n\r\nexport default Tasks\r\n","import React, {useState} from 'react'\r\n\r\nconst AddTask = ({addTask}) => {\r\n    const [task, setTask] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [reminder, setReminder] = useState('');\r\n\r\n    const handleAdd = (e) => {\r\n        e.preventDefault();\r\n        if(!task) {\r\n            alert('Please Add a Task');\r\n            return;\r\n        }\r\n        const newTask = {\r\n            text: task,\r\n            day: date,\r\n            reminder: reminder,\r\n        } \r\n\r\n        addTask(newTask);\r\n\r\n        setTask('');\r\n        setDate('');\r\n        setReminder(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={handleAdd}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={task} onChange={(e) => setTask(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Day & Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day & Time\" value={date} onChange={(e) => setDate(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label htmlFor=\"\">Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            \r\n            <input type=\"submit\" className=\"btn btn-block\" placeholder=\"Save Task\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {Link} from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {Link} from 'react-router-dom';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { useState, useEffect } from 'react' \nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\n\nfunction App() {\n  \n  // const data = [\n  //   {\n  //       id: 1,\n  //       text: 'Doctors Appoinment',\n  //       day: 'Feb 5th at 2:30pm',\n  //       reminder: true,\n  //   },\n  //   {\n  //       id: 2,\n  //       text: 'Doctors Appoinment',\n  //       day: 'Feb 5th at 2:30pm',\n  //       reminder: true,\n  //   },\n  //   {\n  //       id: 3,\n  //       text: 'Doctors Appoinment',\n  //       day: 'Feb 5th at 2:30pm',\n  //       reminder: true,\n  //   }\n  // ]\n\n  const [tasks, setTasks] = useState([]);\n  const [form, setForm] = useState(false);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:8000/tasks');\n    const data = await res.json();\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`);\n    const data = await res.json();\n    return data\n  }\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n      console.log(data);\n    }\n\n    getTasks();\n  }, [])\n\n  const addTask = async (task) => {\n    task.id = tasks[tasks.length - 1].id + 1;\n\n    const res = await fetch(`http://localhost:8000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json' // Indicates the content \n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    console.log(data);\n\n    setTasks((previous) => [...previous, data]);\n  }\n\n  const deleteTask = async(id) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: 'DELETE',\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n    \n  const toggleReminder = async (id) => {\n    const reminderToUpdate = await fetchTask(id);\n    const updatedReminder = {...reminderToUpdate, reminder: !reminderToUpdate.reminder}\n    console.log(reminderToUpdate);\n\n    const res = await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedReminder),\n    })\n\n    const data = await res.json();\n\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task));\n  };\n\n  const toggleForm = () => {\n    setForm(!form);\n  }\n\n  const Home = () => {\n    return (\n      <>\n        {form && <AddTask addTask={addTask}/>}\n        {tasks.length > 0 ? <Tasks tasks={tasks} toggleReminder={toggleReminder} deleteTask={deleteTask}/> : 'No Tasks To Show'}\n      </>\n    )\n  }\n  \n  return (\n    <Router>\n      <div className=\"container\">\n        <Header showAdd={form} toggleForm={toggleForm}/>\n\n        {/* Another Way to render the route fragments -----------------------------------------*/}\n        {/* <Route exact path='/' render={(props) => (\n          <>\n            {form && <AddTask addTask={addTask}/>}\n            {tasks.length > 0 ? <Tasks tasks={tasks} toggleReminder={toggleReminder} deleteTask={deleteTask}/> : 'No Tasks To Show'}\n          </>\n        )}/> */}\n\n        <Route exact path={[\"/\", \"/task-tracker\"]}>\n          <Home/>\n        </Route>\n\n        <Route path='/about' component={About}/>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}